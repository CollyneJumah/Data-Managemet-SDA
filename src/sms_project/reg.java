/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sms_project;

import com.sun.glass.events.KeyEvent;
import static com.sun.webkit.perf.WCGraphicsPerfLogger.reset;
import database.Mysql;
import java.awt.Color;
import java.awt.event.KeyListener;
import static java.lang.Thread.sleep;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.border.LineBorder;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import net.proteanit.sql.DbUtils;
import sms_project.Connect;

/**
 *
 * @author CollyneJumah
 */
public class reg extends javax.swing.JPanel {
    private Connection conn;
      private PreparedStatement pst;
     private ResultSet rs;
    public Connection getConnection(){
        Connection conn;
        try{
            conn=DriverManager.getConnection("jdbc:mysql://localhost/cu","root","");
            return conn;
        
        }catch(Exception ex){
        ex.printStackTrace();
        return null;
        }
    }

    /**
     * Creates new form reg
     */
//       public void executeSqlQuery(String query,String message){
//       
//             Connection conn=getConnection();
//             Statement st;
//            try{
//                st=conn.createStatement();
//                if(st.executeUpdate(query)==1){
//                    DefaultTableModel model=(DefaultTableModel)tableShowMembers.getModel();
//                    model.setRowCount(0);
//                    showResultsOnTable();
//                JOptionPane.showMessageDialog(null,"Data"+message+"Successsful");
//                
//                }else{
//                    JOptionPane.showMessageDialog(null,"No Data"+message);
//                }
//                
//            }catch(Exception ex){
//            JOptionPane.showMessageDialog(this, ex);
//            ex.printStackTrace();
//            }
//     }
//   
    public reg() {
        initComponents();
        timer();
        date();
//        showResultsOnTable();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        fName = new javax.swing.JLabel();
        lastName = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtFirst_Name = new javax.swing.JTextField();
        txtPhoneNumber = new javax.swing.JTextField();
        txtRegNumber = new javax.swing.JTextField();
        btnSave = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        txtLast_Name = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        Radio_Male = new javax.swing.JRadioButton();
        Radio_Female = new javax.swing.JRadioButton();
        CboYear = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cboBsf = new javax.swing.JComboBox<>();
        labelShowTime = new javax.swing.JLabel();
        showDate = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(1005, 617));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 51)), "Manage", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 14), new java.awt.Color(0, 102, 51))); // NOI18N
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        fName.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        fName.setForeground(new java.awt.Color(0, 102, 51));
        fName.setText("First Name");
        jPanel2.add(fName, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 41, 68, 25));

        lastName.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lastName.setForeground(new java.awt.Color(0, 102, 51));
        lastName.setText("Last Name");
        jPanel2.add(lastName, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 50, 68, -1));

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 102, 51));
        jLabel4.setText("Phone");
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 110, -1, -1));

        jLabel6.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 102, 51));
        jLabel6.setText("Year");
        jPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 180, -1, -1));

        txtFirst_Name.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtFirst_Name.setForeground(new java.awt.Color(0, 102, 51));
        txtFirst_Name.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtFirst_Name.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 102, 51)));
        txtFirst_Name.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtFirst_NameKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtFirst_NameKeyTyped(evt);
            }
        });
        jPanel2.add(txtFirst_Name, new org.netbeans.lib.awtextra.AbsoluteConstraints(93, 35, 172, 38));

        txtPhoneNumber.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtPhoneNumber.setForeground(new java.awt.Color(0, 102, 51));
        txtPhoneNumber.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtPhoneNumber.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 102, 51)));
        txtPhoneNumber.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtPhoneNumberMouseClicked(evt);
            }
        });
        txtPhoneNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPhoneNumberActionPerformed(evt);
            }
        });
        txtPhoneNumber.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPhoneNumberKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPhoneNumberKeyTyped(evt);
            }
        });
        jPanel2.add(txtPhoneNumber, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 110, 180, 29));

        txtRegNumber.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtRegNumber.setForeground(new java.awt.Color(0, 102, 51));
        txtRegNumber.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtRegNumber.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 102, 51)));
        txtRegNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRegNumberActionPerformed(evt);
            }
        });
        jPanel2.add(txtRegNumber, new org.netbeans.lib.awtextra.AbsoluteConstraints(111, 111, 172, 32));

        btnSave.setBackground(new java.awt.Color(0, 102, 0));
        btnSave.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnSave.setForeground(new java.awt.Color(255, 255, 255));
        btnSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sms_project/images/Submit Progress_30px.png"))); // NOI18N
        btnSave.setText("Submit");
        btnSave.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnSave.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });
        jPanel2.add(btnSave, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 310, 200, 40));

        btnReset.setBackground(new java.awt.Color(255, 51, 0));
        btnReset.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnReset.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sms_project/images/Reset_30px.png"))); // NOI18N
        btnReset.setText("Reset");
        btnReset.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnReset.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnReset.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                btnResetAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });
        jPanel2.add(btnReset, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 310, 133, 40));

        txtLast_Name.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtLast_Name.setForeground(new java.awt.Color(0, 102, 51));
        txtLast_Name.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtLast_Name.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 102, 51)));
        jPanel2.add(txtLast_Name, new org.netbeans.lib.awtextra.AbsoluteConstraints(387, 35, 172, 38));

        jLabel7.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 102, 51));
        jLabel7.setText("Reg Number");
        jPanel2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 111, 92, -1));

        jLabel8.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 102, 51));
        jLabel8.setText("Gender");
        jPanel2.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 182, 66, -1));

        buttonGroup2.add(Radio_Male);
        Radio_Male.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        Radio_Male.setText("Male");
        jPanel2.add(Radio_Male, new org.netbeans.lib.awtextra.AbsoluteConstraints(87, 174, 55, -1));

        buttonGroup2.add(Radio_Female);
        Radio_Female.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        Radio_Female.setText("Female");
        jPanel2.add(Radio_Female, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 174, -1, -1));

        CboYear.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        CboYear.setForeground(new java.awt.Color(0, 102, 51));
        CboYear.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "--Select--Year--", "First Year", "Second Year", "Third Year", "Fourth Year", "Children", "Associate", "Post-Graduates", "Staff", " " }));
        CboYear.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(51, 255, 0)));
        CboYear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CboYearActionPerformed(evt);
            }
        });
        jPanel2.add(CboYear, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 170, 180, 38));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 102, 0));
        jLabel1.setText("Bible Study ");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 250, -1, 31));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 102, 0));
        jLabel2.setText("Family");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 260, -1, -1));

        cboBsf.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        cboBsf.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Select--Family--", "End Time Stewards", "Light Bearers", "King Heralds", "The Conquerers", "The living Water", "The Trumpets", "The Amazing Grace", "The Christ Abiders", "The Veterans", "The Cornestone", "The New Jerry" }));
        cboBsf.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel2.add(cboBsf, new org.netbeans.lib.awtextra.AbsoluteConstraints(202, 240, 230, 42));

        labelShowTime.setFont(new java.awt.Font("SimSun", 1, 24)); // NOI18N
        labelShowTime.setForeground(new java.awt.Color(255, 255, 255));

        showDate.setFont(new java.awt.Font("Wide Latin", 0, 18)); // NOI18N
        showDate.setForeground(new java.awt.Color(0, 102, 0));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(129, 129, 129)
                        .addComponent(showDate, javax.swing.GroupLayout.PREFERRED_SIZE, 527, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(373, 373, 373)
                        .addComponent(labelShowTime, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(100, 100, 100)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 586, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(labelShowTime, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(showDate, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 357, Short.MAX_VALUE))
        );

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 50, 747, 410));
    }// </editor-fold>//GEN-END:initComponents

    private void CboYearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CboYearActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CboYearActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        reset();
    }//GEN-LAST:event_btnResetActionPerformed

    private void btnResetAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_btnResetAncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_btnResetAncestorAdded

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        insert();

    }//GEN-LAST:event_btnSaveActionPerformed

    private void txtRegNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRegNumberActionPerformed

    }//GEN-LAST:event_txtRegNumberActionPerformed

    private void txtPhoneNumberKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPhoneNumberKeyTyped
        char c = evt.getKeyChar();

        if (!((c >= '0') && (c <= '9') || (c == KeyEvent.VK_BACKSPACE) || (c == KeyEvent.VK_DELETE) || (c == KeyEvent.VK_ENTER))) {

            JOptionPane.showMessageDialog(null, "Enter Numerics Only");
            evt.consume();
        }
        String phoneNumber=txtPhoneNumber.getText();

        if(phoneNumber.length()==13){
            evt.consume();
        }
    }//GEN-LAST:event_txtPhoneNumberKeyTyped

    private void txtPhoneNumberKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPhoneNumberKeyPressed

    }//GEN-LAST:event_txtPhoneNumberKeyPressed

    private void txtPhoneNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPhoneNumberActionPerformed

    }//GEN-LAST:event_txtPhoneNumberActionPerformed

    private void txtPhoneNumberMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtPhoneNumberMouseClicked
        txtPhoneNumber.setText("+2547");
        String phone = txtPhoneNumber.getText();
        if(phone.length()==13){
            JOptionPane.showMessageDialog(this," Reach Maximum!");
        }
    }//GEN-LAST:event_txtPhoneNumberMouseClicked

    private void txtFirst_NameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFirst_NameKeyTyped
        // TODO add your handling code here:

    }//GEN-LAST:event_txtFirst_NameKeyTyped

    private void txtFirst_NameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFirst_NameKeyPressed
        lastName.setVisible(true);
        txtLast_Name.setVisible(true);
    }//GEN-LAST:event_txtFirst_NameKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox CboYear;
    private javax.swing.JRadioButton Radio_Female;
    private javax.swing.JRadioButton Radio_Male;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnSave;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JComboBox<String> cboBsf;
    private javax.swing.JLabel fName;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel labelShowTime;
    private javax.swing.JLabel lastName;
    public static javax.swing.JLabel showDate;
    private javax.swing.JTextField txtFirst_Name;
    private javax.swing.JTextField txtLast_Name;
    private javax.swing.JTextField txtPhoneNumber;
    private javax.swing.JTextField txtRegNumber;
    // End of variables declaration//GEN-END:variables


public void insert(){
       Connect cc= new Connect();
       conn=cc.connect();
       
        
//            String dl=((JTextField)dat.getDateEditor().getUiComponent()).getText();
            
            String fname=txtFirst_Name.getText();
            String lname=txtLast_Name.getText();
            String phone=txtPhoneNumber.getText();
            String reg=txtRegNumber.getText();
           String Year=(String) CboYear.getSelectedItem();
                switch (Year) {
                    case "First Year":
                        Year="1";
                        break;
                    case "Second Year":
                        Year="2";
                        break;
                    case "Third Year":
                        Year="3";
                        break;
                    case "Fourth Year":
                        Year="4";
                        break;
                }
            String bsf=(String) cboBsf.getSelectedItem();
            String Gender;
            if(Radio_Female.isSelected()){
            Gender="Female";
            }else{
            Gender="Male";
            }
            if(fname.equals("")){
                    txtFirst_Name.setBorder(new LineBorder(Color.red));
                    JOptionPane.showMessageDialog(this," first name is required");
                    }
            else if(lname.equals("")){
            txtLast_Name.setBorder(new LineBorder(Color.red));
                    JOptionPane.showMessageDialog(this," Last name is required");
            }
            else if(reg.equals("")){
                      txtRegNumber.setBorder(new LineBorder(Color.red));
                      JOptionPane.showMessageDialog(this,"Registration Number required");
                     }
             else if(reg.length() <13 || reg.length()>15){
             JOptionPane.showMessageDialog(this,"Invalid input of "+reg+"\n Maxmum lenght Not reached!");
            }
             else if(phone.equals("")){
                      txtPhoneNumber.setBorder(new LineBorder(Color.red));
                      JOptionPane.showMessageDialog(this,"Phone number is mandatory required");
            }
             else if(phone.length() !=13){
                   txtPhoneNumber.setBorder(new LineBorder(Color.red));
                    JOptionPane.showMessageDialog(this,"your phone number is either incorrect or too short");
            }
            else if(phone.startsWith("07")){
                    txtPhoneNumber.setBorder(new LineBorder(Color.red));
                    JOptionPane.showMessageDialog(this, "incorrect format! Use +2547");
            }
             else if(cboBsf.getSelectedIndex()==0){
                cboBsf.setBorder(new LineBorder(Color.red));
                JOptionPane.showMessageDialog(this, "Your bible study group is required");
            }
            else if(CboYear.getSelectedIndex()==0){
                CboYear.setBorder(new LineBorder(Color.red));
                JOptionPane.showMessageDialog(this, "Your year of study is required.");
            }
       
           else{
                     
       try{
       String name= fname+" "+lname;
 String sql="INSERT INTO registerMembers(name,regNumber,"
        + "gender,phone,year,bsf)VALUES('"+name+"','"+txtRegNumber.getText()+"','"+Gender+"',"
       + "'"+txtPhoneNumber.getText()+"','"+Year+"','"+cboBsf.getSelectedItem()+"')";            pst=conn.prepareStatement(sql);
            pst.execute();
       
            int save;
            save=  JOptionPane.showConfirmDialog(null,"Save","Are you Sure you/n want to Save Data?",JOptionPane.YES_NO_OPTION,JOptionPane.INFORMATION_MESSAGE);
            
            if(save==JOptionPane.YES_NO_OPTION){
                
                JOptionPane.showMessageDialog(this,"Dear "+fname+", Your choir Records Saved Successfully !");
             reset();
        
          }
       }catch(Exception e){
            txtFirst_Name.setBorder(new LineBorder(Color.red));
        txtLast_Name.setBorder(new LineBorder(Color.red));
        txtPhoneNumber.setBorder(new LineBorder(Color.red));
      
        Radio_Female.setBorder(new LineBorder(Color.red));
        Radio_Male.setBorder(new LineBorder(Color.red));
        txtRegNumber.setBorder(new LineBorder(Color.red));
           JOptionPane.showMessageDialog(this,"Dear "+fname+" "+"\nYou are registered Member"+e.getLocalizedMessage());
       }
            
            }        

}
 //clear all field texts
 private  void reset(){
 
       btnReset.setEnabled(true);
       txtFirst_Name.setText("");
       txtLast_Name.setText("");
       txtPhoneNumber.setText("+2547");
       txtRegNumber.setText("");
       txtLast_Name.setVisible(true);
       lastName.setVisible(true);
       fName.setVisible(true);
       
       
 
 
 }
 private void normaBorder(){
     
 
 }
 //display records on table
// public void showResultsOnTable(){
//     try{
//         Connection conn=null;
//         PreparedStatement pst= null;
//         ResultSet rs;
//      
//        conn= DriverManager.getConnection("jdbc:mysql://localhost:3306/sda","root","");
//        String sql="SELECT * FROM registermembers ORDER BY Id Asc";
//        pst=conn.prepareStatement(sql);
//        rs= pst.executeQuery();
//        tableShowMembers.setModel(DbUtils.resultSetToTableModel(rs));
//       
//
//     }catch(Exception ex){
//            JOptionPane.showMessageDialog(null, ex);
//     
//     }
// 
// }
// public void searchRecords(){
//      DefaultTableModel model=(DefaultTableModel) tableShowMembers.getModel();
//                model.setRowCount(0);
//      int components;
//        Connection con=null;
//        ResultSet rs=null;
//        Statement st;
//        PreparedStatement pst=null;
//      
//        try{
//        
//           String dbname="cu";
//            String pass="";
//            String username="root";
//            String Url="jdbc:mysql://localhost:3306/";
//            String Drivers="com.mysql.jdbc.Driver";
//
//            Class.forName(Drivers);
//            con=DriverManager.getConnection(Url+dbname,username,pass);
//            String sql="SELECT * FROM registermembers WHERE Reg_Number LIKE '%"+QuickSearch.getText()+"%' || First_Name LIKE '%"+QuickSearch.getText()+"%' || PhoneNumber LIKE '%"+QuickSearch.getText()+"%' ORDER BY Id ASC";
// 
//            pst=con.prepareStatement(sql);
//            pst.execute();
//            model=(DefaultTableModel)tableShowMembers.getModel();
//           
//            if (rs.next()){
//                
//             // model.setRowCount(model.getRowCount()+1);
//                String id=rs.getString("ID");  
//                String fn=rs.getString("Name");
//              //  String ln=rs.getString("Last_Name");
//                String reg=rs.getString("Reg_Number");
//                String gd=rs.getString("Gender");
//                String phn=rs.getString("PhoneNumber");
//                String yr=rs.getString("Year");
//                String bs=rs.getString("bsf");    
//             
//
//                model.addRow(new Object[]{id,fn,reg,gd,phn,yr,bs});
//                    
//           }
//            
//            if(model.getRowCount()==0){
//            JOptionPane.showMessageDialog(this,"No Record Match!");
//            
//            }else{
//            
//            }
////            if(rs.equals(0)){
////            JOptionPane.showMessageDialog(this,"No record Found");
////            
////            }
//            //confirm data submission
//      //show error when empty fields submitted
//        }catch(Exception ex){
//       
// 
//        }
// 
// }public void updateRecords(){
//     
//     try{
//         int row=tableShowMembers.getSelectedRow();
//         String value=(tableShowMembers.getModel().getValueAt(row, 0).toString());
//     String sql="UPDATE registermembers SET Name =?,Reg_Number =?,Gender=?,PhoneNumber =?,Year=? WHERE Id="+value;
//     Connection conn=null;
//         PreparedStatement pst= null;
//         ResultSet rs;
//        conn= DriverManager.getConnection("jdbc:mysql://localhost:3306/sda","root","");
//           pst= conn.prepareStatement(sql);
//                String fname=txtFirst_Name.getText();
//                String lname=txtLast_Name.getText();
//                String name= fname+" "+lname;
//        pst.setString(1,name);
//        pst.setString(2, txtRegNumber.getText());
//           String Gender;
//            if(Radio_Female.isSelected()){
//            Gender="Female";
//            }else{
//            Gender="Male";
//            }
//        pst.setString(3,Gender);
//        pst.setString(4, txtPhoneNumber.getText());
//          String Year=(String) CboYear.getSelectedItem();
//                switch (Year) {
//                    case "First Year":
//                        Year="1";
//                        break;
//                    case "Second Year":
//                        Year="2";
//                        break;
//                    case "Third Year":
//                        Year="3";
//                        break;
//                    case "Fourth Year":
//                        Year="4";
//                        break;
//                }
//                
//        pst.setString(6, Year);
//                 pst.executeUpdate();
//                DefaultTableModel model= (DefaultTableModel)tableShowMembers.getModel();
//                model.setRowCount(0);
//                showResultsOnTable();
//                JOptionPane.showMessageDialog(this,"One Record Updated!");
//                txtLast_Name.setVisible(true);
//                lastName.setVisible(true);
//                fName.setVisible(true);
//     }catch(Exception e){
//     
//          JOptionPane.showMessageDialog(this,e);
//     
//     }
// 
// 
// }
// public void deleteRecords(){
//        dbConnect connect= new dbConnect();
//        connect.Connect();
//        try{
//            DefaultTableModel model=(DefaultTableModel)tableShowMembers.getModel();
//            
//         int select= tableShowMembers.getSelectedRow();
//       //  Object Reg_Number=tableShowMembers.getValueAt(select,0).toString();
////         txId.setText(model.getValueAt(select, 0).toString());
//         txtFirst_Name.setText(model.getValueAt(select, 0).toString());
//        // txtLast_Name.setText(model.getValueAt(select, 2).toString());
//         txtRegNumber.setText(model.getValueAt(select, 2).toString());
//         String gender=model.getValueAt(select, 3).toString();
//            if(gender.equals("Male")){
//                Radio_Male.setSelected(true);
//            }else{
//                Radio_Female.setSelected(true);
//            }
//         txtPhoneNumber.setText(model.getValueAt(select, 4).toString());
//          
//          String year=model.getValueAt(select, 6).toString();
//            switch(year){
//                case "First Year":
//                    CboYear.setSelectedIndex(1);
//                    break;
//                case "Second Year":
//                    CboYear.setSelectedIndex(2);
//                    break;
//                case "Third Year":
//                    CboYear.setSelectedIndex(3);
//                    break;
//                case "Fourth Year":
//                    CboYear.setSelectedIndex(4);
//                    break;
//                case "Associate":
//                   CboYear.setSelectedIndex(5);
//                    break;
//                case "Allumini":
//                    CboYear.setSelectedIndex(6);
//                    break; 
//                case "Guest":
//                    CboYear.setSelectedIndex(7);
//                    break;
//            }
//
//         showResultsOnTable();
//        }catch(Exception e){
//        JOptionPane.showMessageDialog(this,e.getLocalizedMessage());
//        }
//    }
// 
 public void timer(){

     Thread clock= new Thread(){
         public void run(){
         
         for(;;){
          Calendar cal = new GregorianCalendar();
          SimpleDateFormat sdf= new SimpleDateFormat("HH:mm:ss a");

          labelShowTime.setText(sdf.format(cal.getTime()));
         try{
             sleep(1000);
         }catch(Exception ex){
         
             JOptionPane.showMessageDialog(null, ex);
         
         }
         }
         }
         
                };
         clock.start();
                 }

 private void date(){
     
     Date d= new Date();
     String show= d.toString();
     showDate.setText(show);
 }
 
 
 public class FeeReminder {

    String message = "";
    PreparedStatement pst;
    ResultSet rs;
    String data[] = new String[5];

//    private void selectData() throws SQLException {
//       Connect c= new Connect();
//       c.connect();
//
//        pst = Mysql.connect("sda")
//                .prepareStatement("select Name,Reg_Number,gender,phoneNumber,Year from Reg_Number WHERE Reg_Number LIKE '%"+QuickSearch.getText()+"%' || name LIKE '%"+QuickSearch.getText()+"%'");
////            Logger.getLogger(CA.class.getName()).log(Level.SEVERE, null, ex);
//
//        try {
//            rs = pst.executeQuery();
//            while (rs.next()) {
//                data[0] = rs.getString("Name");
//                 data[1] = rs.getString("Reg_Number");
//                  data[2] = rs.getString("gender");
//                    data[3] = rs.getString("phoneNumber");
//                      data[4] = rs.getString("Year");
//                
//                message = processMessage(data);
//
//                sendSMS(rs.getString("phoneNumber"));
//            }
//        } catch (SQLException ex) {
////            Logger.getLogger(CA.class.getName()).log(Level.SEVERE, null, ex);
//        }
//
//    }
    private String processMessage(String data[]) {
        String name=data[0];
       // String =data[3];
        String et=data[6];
      
//    message = "Dear {sex}{name}! Lechall33 now .kindly hurry.Bash kick starts.Thanks";
//    message = "Dear {sex}."+parent+"! your student {name} has payed Ksh."+payed+" via "+mode+". Outstanding fee balance for this year is Ksh."+balance+".Thank you ";
        message = "Dear "+name+"! You have successfuly been registered as a member of Kisii University Kisii University SeventhDay Adventist Church. Thanks.";

        String sex = data[2].equalsIgnoreCase("Male") ? "Mr." : "Miss.";
       
         
        return message.replace("{name}", " " + data[0] + " ").replace("{sex}", sex);
    }

    private void sendSMS(String recepient) {
        try {
            pst = Mysql.connect("sda").
                    prepareStatement("INSERT INTO outbox(receiver,msg,msgtype,sender)"
                            + " VALUES(?,?,?,?)");
            pst.setString(1, recepient);
            pst.setString(2, message);
            pst.setString(3, "sms.text");
            pst.setString(4, "+2547");

        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
        }
        try {
            pst.execute();
        } catch (SQLException ex) {
        }
        Icon icon = new ImageIcon(getClass().getResource("/ter/icons/10.gif"));
        JOptionPane.showMessageDialog(null, "Sending messages...","",JOptionPane.INFORMATION_MESSAGE,icon);
    }
//
//    public static void main(String[] args) {
//       FeeReminder f= new FeeReminder();
//       f.selectData();
    }
     

}
