/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sms_project;

import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.MessageFormat;
import javafx.event.ActionEvent;
import javafx.event.EventHandler;
import javafx.geometry.Pos;
import javafx.util.Duration;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRExporter;
import net.sf.jasperreports.engine.JRExporterParameter;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.design.JRDesignQuery;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.export.JRPdfExporter;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import net.sf.jasperreports.view.JasperViewer;
import org.controlsfx.control.Notifications;

/**
 *
 * @author CollyneJumah
 */
public class DisplayMembers extends javax.swing.JPanel {
    Connection conn= null;
    ResultSet rs;
    Statement st;
    PreparedStatement pst=null;
    /**
     * Creates new form displayParents
     */
    public DisplayMembers() {
        initComponents();
//        End Time Stewards
//Light Bearers
//King Heralds
//The Conquerers
//The living Water
//The Trumpets
//The Amazing Grace
//The Christ Abiders
//The Veterans
//The Cornestone
//The New Jerry
        DisplayMembers.totalMembers.setText("Registered Members="+Integer.toString(COUNT_TOTAL_NUMBER.countRegisteredMembers("registermembers WHERE year !='Associate'")));
        DisplayMembers.totalExec.setText("Registered Executives: ="+Integer.toString(COUNT_TOTAL_NUMBER.countRegisteredMembers("executives")));
                DisplayMembers.totalChristMessenger.setText("Registered Members="+Integer.toString(COUNT_TOTAL_NUMBER.countRegisteredMembers("christmessengers WHERE year !='Associate'")));
                        DisplayMembers.totalEndtime.setText("Registered Members="+Integer.toString(COUNT_TOTAL_NUMBER.countRegisteredMembers("endtimeherald WHERE year !='Associate'")));
                                DisplayMembers.totalFirstfruit.setText("Registered Members="+Integer.toString(COUNT_TOTAL_NUMBER.countRegisteredMembers("firstfruit WHERE year !='Associate'")));
                                DisplayMembers.totalNewzion.setText("Registered Members="+Integer.toString(COUNT_TOTAL_NUMBER.countRegisteredMembers("presenttruth WHERE year !='Associate'")));
                                        DisplayMembers.totalEndtime.setText("Registered Members="+Integer.toString(COUNT_TOTAL_NUMBER.countRegisteredMembers("endtimeherald WHERE year !='Associate'")));
                                                DisplayMembers.totalPresenttruth.setText("Registered Members="+Integer.toString(COUNT_TOTAL_NUMBER.countRegisteredMembers("presenttruth WHERE year !='Associate'")));
                                                        DisplayMembers.totalChoir.setText("Registered Members="+Integer.toString(COUNT_TOTAL_NUMBER.countRegisteredMembers("choir WHERE year !='Associate'")));


        
        
        
       displayMembers();
       displayExecutives();
       displayChristMsg();
       displayFirstFruit();
       displayPresentTruth();
       displayNewZion();
       displayEndTimeHerald();
       displayChoir();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        totalMembers = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        displayMembers = new javax.swing.JTable();
        jToggleButton15 = new javax.swing.JToggleButton();
        jToggleButton16 = new javax.swing.JToggleButton();
        jPanel7 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        displayExecutives = new javax.swing.JTable();
        jLabel16 = new javax.swing.JLabel();
        jToggleButton13 = new javax.swing.JToggleButton();
        jToggleButton14 = new javax.swing.JToggleButton();
        totalExec = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jPanel18 = new javax.swing.JPanel();
        jScrollPane11 = new javax.swing.JScrollPane();
        displaychristMessengers = new javax.swing.JTable();
        jLabel20 = new javax.swing.JLabel();
        totalChristMessenger = new javax.swing.JLabel();
        jToggleButton1 = new javax.swing.JToggleButton();
        jToggleButton2 = new javax.swing.JToggleButton();
        jPanel4 = new javax.swing.JPanel();
        jPanel17 = new javax.swing.JPanel();
        jScrollPane10 = new javax.swing.JScrollPane();
        displayEndTimeHerald = new javax.swing.JTable();
        jLabel17 = new javax.swing.JLabel();
        totalEndtime = new javax.swing.JLabel();
        jToggleButton3 = new javax.swing.JToggleButton();
        jToggleButton4 = new javax.swing.JToggleButton();
        jPanel10 = new javax.swing.JPanel();
        jPanel16 = new javax.swing.JPanel();
        jScrollPane9 = new javax.swing.JScrollPane();
        displayFirstFruit = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();
        totalFirstfruit = new javax.swing.JLabel();
        jToggleButton5 = new javax.swing.JToggleButton();
        jToggleButton6 = new javax.swing.JToggleButton();
        jPanel11 = new javax.swing.JPanel();
        jPanel15 = new javax.swing.JPanel();
        jScrollPane8 = new javax.swing.JScrollPane();
        displayNewZion = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        totalNewzion = new javax.swing.JLabel();
        jToggleButton7 = new javax.swing.JToggleButton();
        jToggleButton8 = new javax.swing.JToggleButton();
        jPanel12 = new javax.swing.JPanel();
        jPanel14 = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        displayPresentTruth = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        totalPresenttruth = new javax.swing.JLabel();
        jToggleButton9 = new javax.swing.JToggleButton();
        jToggleButton10 = new javax.swing.JToggleButton();
        jPanel1 = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        displayChoir = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        totalChoir = new javax.swing.JLabel();
        jToggleButton11 = new javax.swing.JToggleButton();
        jToggleButton12 = new javax.swing.JToggleButton();
        jPanel19 = new javax.swing.JPanel();
        jPanel21 = new javax.swing.JPanel();
        jLabel23 = new javax.swing.JLabel();
        jPanel22 = new javax.swing.JPanel();
        selectgender = new javax.swing.JComboBox<>();
        selectyear = new javax.swing.JComboBox<>();
        btnMembers = new javax.swing.JToggleButton();
        selectGroup = new javax.swing.JComboBox<>();
        jPanel23 = new javax.swing.JPanel();
        jToggleButton18 = new javax.swing.JToggleButton();
        jToggleButton19 = new javax.swing.JToggleButton();
        jToggleButton20 = new javax.swing.JToggleButton();
        jToggleButton21 = new javax.swing.JToggleButton();
        jToggleButton22 = new javax.swing.JToggleButton();
        jToggleButton23 = new javax.swing.JToggleButton();
        jPanel20 = new javax.swing.JPanel();
        jPanel24 = new javax.swing.JPanel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();

        jLabel13.setBackground(new java.awt.Color(255, 255, 255));
        jLabel13.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(0, 102, 0));
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText("Church Members Records");

        jPanel5.setBackground(new java.awt.Color(0, 102, 0));

        jLabel14.setBackground(new java.awt.Color(255, 255, 255));
        jLabel14.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setText("Total Registered Members");

        totalMembers.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        totalMembers.setForeground(new java.awt.Color(255, 255, 0));
        totalMembers.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(91, 91, 91)
                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(totalMembers, javax.swing.GroupLayout.PREFERRED_SIZE, 341, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(46, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(totalMembers, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE))
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 0)), "Members records", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 12), new java.awt.Color(0, 102, 0))); // NOI18N

        displayMembers.setBackground(new java.awt.Color(204, 204, 255));
        displayMembers.setFont(new java.awt.Font("Times New Roman", 0, 11)); // NOI18N
        displayMembers.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "#", "Name", "Reg Number", "Phone", "Gender", "Bible Study", "Year"
            }
        ));
        jScrollPane4.setViewportView(displayMembers);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(194, 194, 194)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 612, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(177, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addGap(0, 23, Short.MAX_VALUE)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jToggleButton15.setBackground(new java.awt.Color(204, 204, 255));
        jToggleButton15.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jToggleButton15.setForeground(new java.awt.Color(255, 255, 255));
        jToggleButton15.setText("Print");
        jToggleButton15.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jToggleButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton15ActionPerformed(evt);
            }
        });

        jToggleButton16.setBackground(new java.awt.Color(204, 255, 204));
        jToggleButton16.setForeground(new java.awt.Color(255, 255, 204));
        jToggleButton16.setText("Excel");
        jToggleButton16.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(300, 300, 300)
                                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 363, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(265, 265, 265)
                                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addComponent(jToggleButton15, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jToggleButton16, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jPanel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jToggleButton15)
                            .addComponent(jToggleButton16))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Church Members", jPanel2);

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 0)), "Executives records", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 12), new java.awt.Color(0, 102, 0))); // NOI18N

        displayExecutives.setFont(new java.awt.Font("Times New Roman", 0, 11)); // NOI18N
        displayExecutives.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "#", "Name", "Reg Number", "Phone", "Gender", "Role", "Year"
            }
        ));
        jScrollPane5.setViewportView(displayExecutives);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(194, 194, 194)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 612, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(167, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addGap(0, 27, Short.MAX_VALUE)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jLabel16.setBackground(new java.awt.Color(255, 255, 255));
        jLabel16.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(0, 102, 0));
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel16.setText("Church Executives Details");

        jToggleButton13.setBackground(new java.awt.Color(204, 204, 255));
        jToggleButton13.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jToggleButton13.setForeground(new java.awt.Color(255, 255, 255));
        jToggleButton13.setText("Print");
        jToggleButton13.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jToggleButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton13ActionPerformed(evt);
            }
        });

        jToggleButton14.setBackground(new java.awt.Color(204, 255, 204));
        jToggleButton14.setForeground(new java.awt.Color(255, 255, 204));
        jToggleButton14.setText("Excel");
        jToggleButton14.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGap(282, 282, 282)
                                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 371, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jToggleButton13, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jToggleButton14, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGap(316, 316, 316)
                                .addComponent(totalExec, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jToggleButton13)
                        .addComponent(jToggleButton14))
                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(totalExec, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jTabbedPane1.addTab("Church Executives", jPanel7);

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        jPanel18.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 0)), "Christ Messengers", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 12), new java.awt.Color(0, 102, 0))); // NOI18N

        displaychristMessengers.setFont(new java.awt.Font("Times New Roman", 0, 11)); // NOI18N
        displaychristMessengers.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "#", "Name", "Reg Number", "Phone", "Gender", "Role", "Year"
            }
        ));
        jScrollPane11.setViewportView(displaychristMessengers);

        jLabel20.setBackground(new java.awt.Color(255, 255, 255));
        jLabel20.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel20.setText("Christ Messengers");

        totalChristMessenger.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        totalChristMessenger.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        jToggleButton1.setBackground(new java.awt.Color(204, 204, 255));
        jToggleButton1.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jToggleButton1.setForeground(new java.awt.Color(255, 255, 255));
        jToggleButton1.setText("Print");
        jToggleButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });

        jToggleButton2.setBackground(new java.awt.Color(204, 255, 204));
        jToggleButton2.setForeground(new java.awt.Color(255, 255, 204));
        jToggleButton2.setText("Excel");
        jToggleButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel18Layout.createSequentialGroup()
                .addContainerGap(195, Short.MAX_VALUE)
                .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 612, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(161, 161, 161))
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel18Layout.createSequentialGroup()
                        .addGap(343, 343, 343)
                        .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel18Layout.createSequentialGroup()
                        .addGap(223, 223, 223)
                        .addComponent(totalChristMessenger, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(55, 55, 55)
                .addComponent(jToggleButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jToggleButton2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel18Layout.createSequentialGroup()
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel18Layout.createSequentialGroup()
                        .addComponent(jLabel20)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel18Layout.createSequentialGroup()
                        .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jToggleButton1)
                            .addComponent(jToggleButton2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(9, 9, 9)
                .addComponent(totalChristMessenger, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 411, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel18, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane2.addTab("Christ Messengers", jPanel3);

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));

        jPanel17.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 0)), "End Time Herald", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 12), new java.awt.Color(0, 102, 0))); // NOI18N

        displayEndTimeHerald.setFont(new java.awt.Font("Times New Roman", 0, 11)); // NOI18N
        displayEndTimeHerald.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "#", "Name", "Reg Number", "Phone", "Gender", "Role", "Year"
            }
        ));
        jScrollPane10.setViewportView(displayEndTimeHerald);

        jLabel17.setBackground(new java.awt.Color(255, 255, 255));
        jLabel17.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel17.setText("End Time Herald");

        totalEndtime.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        totalEndtime.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        jToggleButton3.setBackground(new java.awt.Color(204, 204, 255));
        jToggleButton3.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jToggleButton3.setForeground(new java.awt.Color(255, 255, 255));
        jToggleButton3.setText("Print");
        jToggleButton3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jToggleButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton3ActionPerformed(evt);
            }
        });

        jToggleButton4.setBackground(new java.awt.Color(204, 255, 204));
        jToggleButton4.setForeground(new java.awt.Color(255, 255, 204));
        jToggleButton4.setText("Excel");
        jToggleButton4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel17Layout.createSequentialGroup()
                .addContainerGap(175, Short.MAX_VALUE)
                .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 612, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(161, 161, 161))
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel17Layout.createSequentialGroup()
                        .addGap(343, 343, 343)
                        .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35)
                        .addComponent(jToggleButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jToggleButton4))
                    .addGroup(jPanel17Layout.createSequentialGroup()
                        .addGap(294, 294, 294)
                        .addComponent(totalEndtime, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel17Layout.createSequentialGroup()
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jToggleButton3)
                        .addComponent(jToggleButton4))
                    .addComponent(jLabel17))
                .addGap(18, 18, 18)
                .addComponent(totalEndtime, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 411, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12))
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 978, Short.MAX_VALUE)
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel4Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 519, Short.MAX_VALUE)
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel17, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("End Time Herald", jPanel4);

        jPanel10.setBackground(new java.awt.Color(255, 255, 255));

        jPanel16.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 0)), "First Fruit", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 12), new java.awt.Color(0, 102, 0))); // NOI18N

        displayFirstFruit.setFont(new java.awt.Font("Times New Roman", 0, 11)); // NOI18N
        displayFirstFruit.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "#", "Name", "Reg Number", "Phone", "Gender", "Role", "Year"
            }
        ));
        jScrollPane9.setViewportView(displayFirstFruit);

        jLabel10.setBackground(new java.awt.Color(255, 255, 255));
        jLabel10.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("First Fruit");

        totalFirstfruit.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        totalFirstfruit.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        jToggleButton5.setBackground(new java.awt.Color(204, 204, 255));
        jToggleButton5.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jToggleButton5.setForeground(new java.awt.Color(255, 255, 255));
        jToggleButton5.setText("Print");
        jToggleButton5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jToggleButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton5ActionPerformed(evt);
            }
        });

        jToggleButton6.setBackground(new java.awt.Color(204, 255, 204));
        jToggleButton6.setForeground(new java.awt.Color(255, 255, 204));
        jToggleButton6.setText("Excel");
        jToggleButton6.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel16Layout.createSequentialGroup()
                .addContainerGap(175, Short.MAX_VALUE)
                .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 612, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(161, 161, 161))
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel16Layout.createSequentialGroup()
                        .addGap(343, 343, 343)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jToggleButton5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jToggleButton6))
                    .addGroup(jPanel16Layout.createSequentialGroup()
                        .addGap(195, 195, 195)
                        .addComponent(totalFirstfruit, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel16Layout.createSequentialGroup()
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jToggleButton5)
                        .addComponent(jToggleButton6))
                    .addComponent(jLabel10))
                .addGap(18, 18, 18)
                .addComponent(totalFirstfruit, javax.swing.GroupLayout.DEFAULT_SIZE, 21, Short.MAX_VALUE)
                .addGap(13, 13, 13)
                .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 411, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12))
        );

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 978, Short.MAX_VALUE)
            .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel10Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 519, Short.MAX_VALUE)
            .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel16, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("First Fruit", jPanel10);

        jPanel11.setBackground(new java.awt.Color(255, 255, 255));

        jPanel15.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 0)), "New Zion", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 12), new java.awt.Color(0, 102, 0))); // NOI18N

        displayNewZion.setFont(new java.awt.Font("Times New Roman", 0, 11)); // NOI18N
        displayNewZion.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "#", "Name", "Reg Number", "Phone", "Gender", "Role", "Year"
            }
        ));
        jScrollPane8.setViewportView(displayNewZion);

        jLabel7.setBackground(new java.awt.Color(255, 255, 255));
        jLabel7.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("New Zion");

        totalNewzion.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        totalNewzion.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        jToggleButton7.setBackground(new java.awt.Color(204, 204, 255));
        jToggleButton7.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jToggleButton7.setForeground(new java.awt.Color(255, 255, 255));
        jToggleButton7.setText("Print");
        jToggleButton7.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jToggleButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton7ActionPerformed(evt);
            }
        });

        jToggleButton8.setBackground(new java.awt.Color(204, 255, 204));
        jToggleButton8.setForeground(new java.awt.Color(255, 255, 204));
        jToggleButton8.setText("Excel");
        jToggleButton8.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel15Layout.createSequentialGroup()
                .addContainerGap(175, Short.MAX_VALUE)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 612, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(161, 161, 161))
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addGap(343, 343, 343)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jToggleButton7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jToggleButton8))
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addGap(207, 207, 207)
                        .addComponent(totalNewzion, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel15Layout.createSequentialGroup()
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jToggleButton7)
                        .addComponent(jToggleButton8))
                    .addComponent(jLabel7))
                .addGap(18, 18, 18)
                .addComponent(totalNewzion, javax.swing.GroupLayout.DEFAULT_SIZE, 21, Short.MAX_VALUE)
                .addGap(13, 13, 13)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 411, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12))
        );

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 978, Short.MAX_VALUE)
            .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel11Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 519, Short.MAX_VALUE)
            .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel15, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("New Zion", jPanel11);

        jPanel12.setBackground(new java.awt.Color(255, 255, 255));

        jPanel14.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 0)), "Present Truth", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 12), new java.awt.Color(0, 102, 0))); // NOI18N

        displayPresentTruth.setFont(new java.awt.Font("Times New Roman", 0, 11)); // NOI18N
        displayPresentTruth.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "#", "Name", "Reg Number", "Phone", "Gender", "Role", "Year"
            }
        ));
        jScrollPane7.setViewportView(displayPresentTruth);

        jLabel4.setBackground(new java.awt.Color(255, 255, 255));
        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Present Truth");

        totalPresenttruth.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        totalPresenttruth.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        jToggleButton9.setBackground(new java.awt.Color(204, 204, 255));
        jToggleButton9.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jToggleButton9.setForeground(new java.awt.Color(255, 255, 255));
        jToggleButton9.setText("Print");
        jToggleButton9.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jToggleButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton9ActionPerformed(evt);
            }
        });

        jToggleButton10.setBackground(new java.awt.Color(204, 255, 204));
        jToggleButton10.setForeground(new java.awt.Color(255, 255, 204));
        jToggleButton10.setText("Excel");
        jToggleButton10.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel14Layout.createSequentialGroup()
                .addContainerGap(175, Short.MAX_VALUE)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 612, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(161, 161, 161))
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addGap(343, 343, 343)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(jToggleButton9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jToggleButton10))
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addGap(199, 199, 199)
                        .addComponent(totalPresenttruth, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel14Layout.createSequentialGroup()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jToggleButton9)
                        .addComponent(jToggleButton10)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                .addComponent(totalPresenttruth, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 411, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12))
        );

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 978, Short.MAX_VALUE)
            .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel12Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 519, Short.MAX_VALUE)
            .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel14, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("PresentTruth", jPanel12);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel13.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 0)), "Church records", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 12), new java.awt.Color(0, 102, 0))); // NOI18N

        displayChoir.setFont(new java.awt.Font("Times New Roman", 0, 11)); // NOI18N
        displayChoir.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "#", "Name", "Reg Number", "Phone", "Gender", "Role", "Year"
            }
        ));
        jScrollPane6.setViewportView(displayChoir);

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Church Choir");

        totalChoir.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        totalChoir.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        jToggleButton11.setBackground(new java.awt.Color(204, 204, 255));
        jToggleButton11.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jToggleButton11.setForeground(new java.awt.Color(255, 255, 255));
        jToggleButton11.setText("Print");
        jToggleButton11.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jToggleButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton11ActionPerformed(evt);
            }
        });

        jToggleButton12.setBackground(new java.awt.Color(204, 255, 204));
        jToggleButton12.setForeground(new java.awt.Color(255, 255, 204));
        jToggleButton12.setText("Excel");
        jToggleButton12.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createSequentialGroup()
                .addContainerGap(175, Short.MAX_VALUE)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 612, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(161, 161, 161))
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addGap(333, 333, 333)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(76, 76, 76)
                        .addComponent(jToggleButton11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jToggleButton12))
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addGap(208, 208, 208)
                        .addComponent(totalChoir, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createSequentialGroup()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jToggleButton11)
                        .addComponent(jToggleButton12))
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                .addComponent(totalChoir, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 411, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 978, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 519, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel13, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Church Choir", jPanel1);

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane2)
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane2)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Church Groups", jPanel9);

        jPanel21.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 0)), "Select group to print Lists", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 12), new java.awt.Color(0, 102, 0))); // NOI18N

        jLabel23.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jLabel23.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel23.setText("Select group to print:");

        jPanel22.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 0)), "Select"));

        selectgender.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        selectgender.setForeground(new java.awt.Color(0, 102, 51));
        selectgender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--select--gender--", "Male", "Female" }));
        selectgender.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        selectgender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectgenderActionPerformed(evt);
            }
        });

        selectyear.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        selectyear.setForeground(new java.awt.Color(0, 102, 51));
        selectyear.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--select--Year--", "1", "2", "3", "4", "Children", "Associate", "Post-Graduates", "Staff" }));
        selectyear.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        selectyear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectyearActionPerformed(evt);
            }
        });

        btnMembers.setBackground(new java.awt.Color(51, 153, 0));
        btnMembers.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnMembers.setForeground(new java.awt.Color(255, 255, 204));
        btnMembers.setText("All Members");
        btnMembers.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnMembers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMembersActionPerformed(evt);
            }
        });

        selectGroup.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        selectGroup.setForeground(new java.awt.Color(0, 102, 51));
        selectGroup.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Select--Family--", "End Time Stewards", "Light Bearers", "King Heralds", "The Conquerers", "The living Water", "The Trumpets", "The Amazing Grace", "The Christ Abiders", "The Veterans", "The Cornestone", "The New Jerry" }));
        selectGroup.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        selectGroup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectGroupActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel22Layout = new javax.swing.GroupLayout(jPanel22);
        jPanel22.setLayout(jPanel22Layout);
        jPanel22Layout.setHorizontalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(selectyear, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(selectgender, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(selectGroup, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnMembers, javax.swing.GroupLayout.DEFAULT_SIZE, 139, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel22Layout.setVerticalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnMembers, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(selectGroup, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(selectgender, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel22Layout.createSequentialGroup()
                        .addComponent(selectyear, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jPanel23.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 0)), "Church Groups", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 12))); // NOI18N

        jToggleButton18.setBackground(new java.awt.Color(0, 102, 0));
        jToggleButton18.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jToggleButton18.setForeground(new java.awt.Color(255, 255, 204));
        jToggleButton18.setText("End Time Herald");
        jToggleButton18.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jToggleButton18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton18ActionPerformed(evt);
            }
        });

        jToggleButton19.setBackground(new java.awt.Color(0, 102, 0));
        jToggleButton19.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jToggleButton19.setForeground(new java.awt.Color(255, 255, 204));
        jToggleButton19.setText("\tPresent Truth");
        jToggleButton19.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jToggleButton19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton19ActionPerformed(evt);
            }
        });

        jToggleButton20.setBackground(new java.awt.Color(0, 102, 0));
        jToggleButton20.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jToggleButton20.setForeground(new java.awt.Color(255, 255, 204));
        jToggleButton20.setText("New Zion");
        jToggleButton20.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jToggleButton20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton20ActionPerformed(evt);
            }
        });

        jToggleButton21.setBackground(new java.awt.Color(0, 102, 0));
        jToggleButton21.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jToggleButton21.setForeground(new java.awt.Color(255, 255, 204));
        jToggleButton21.setText("Choir");
        jToggleButton21.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jToggleButton21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton21ActionPerformed(evt);
            }
        });

        jToggleButton22.setBackground(new java.awt.Color(0, 102, 0));
        jToggleButton22.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jToggleButton22.setForeground(new java.awt.Color(255, 255, 204));
        jToggleButton22.setText("\tFirst Fruit");
        jToggleButton22.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jToggleButton22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton22ActionPerformed(evt);
            }
        });

        jToggleButton23.setBackground(new java.awt.Color(0, 102, 0));
        jToggleButton23.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jToggleButton23.setForeground(new java.awt.Color(255, 255, 204));
        jToggleButton23.setText("Christ messengers");
        jToggleButton23.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jToggleButton23.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton23ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel23Layout = new javax.swing.GroupLayout(jPanel23);
        jPanel23.setLayout(jPanel23Layout);
        jPanel23Layout.setHorizontalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel23Layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jToggleButton22, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jToggleButton23, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jToggleButton21, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 85, Short.MAX_VALUE)
                .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jToggleButton19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jToggleButton18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jToggleButton20, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(65, 65, 65))
        );
        jPanel23Layout.setVerticalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel23Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jToggleButton21)
                    .addComponent(jToggleButton18))
                .addGap(18, 18, 18)
                .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jToggleButton19)
                    .addComponent(jToggleButton23))
                .addGap(24, 24, 24)
                .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jToggleButton22)
                    .addComponent(jToggleButton20))
                .addContainerGap(61, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel21Layout = new javax.swing.GroupLayout(jPanel21);
        jPanel21.setLayout(jPanel21Layout);
        jPanel21Layout.setHorizontalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel21Layout.createSequentialGroup()
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel21Layout.createSequentialGroup()
                        .addGap(159, 159, 159)
                        .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel21Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel21Layout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addComponent(jPanel23, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        jPanel21Layout.setVerticalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel21Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel23)
                .addGap(55, 55, 55)
                .addComponent(jPanel22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel23, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(43, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel19Layout = new javax.swing.GroupLayout(jPanel19);
        jPanel19.setLayout(jPanel19Layout);
        jPanel19Layout.setHorizontalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addGap(196, 196, 196)
                .addComponent(jPanel21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(166, Short.MAX_VALUE))
        );
        jPanel19Layout.setVerticalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addGap(81, 81, 81)
                .addComponent(jPanel21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(32, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Print Lists", jPanel19);

        jPanel24.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 0)), "Help Center", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 14), new java.awt.Color(0, 102, 0))); // NOI18N

        jLabel24.setBackground(new java.awt.Color(255, 255, 255));
        jLabel24.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(0, 102, 0));
        jLabel24.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel24.setText("For any help on the use of the system:");
        jLabel24.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        jLabel25.setBackground(new java.awt.Color(255, 255, 255));
        jLabel25.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(0, 102, 0));
        jLabel25.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel25.setText("0790366848");
        jLabel25.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        javax.swing.GroupLayout jPanel24Layout = new javax.swing.GroupLayout(jPanel24);
        jPanel24.setLayout(jPanel24Layout);
        jPanel24Layout.setHorizontalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel24Layout.createSequentialGroup()
                .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel24Layout.createSequentialGroup()
                        .addGap(182, 182, 182)
                        .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel24Layout.createSequentialGroup()
                        .addGap(223, 223, 223)
                        .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(152, Short.MAX_VALUE))
        );
        jPanel24Layout.setVerticalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel24Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(132, 132, 132)
                .addComponent(jLabel25)
                .addContainerGap(210, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel20Layout = new javax.swing.GroupLayout(jPanel20);
        jPanel20.setLayout(jPanel20Layout);
        jPanel20Layout.setHorizontalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel20Layout.createSequentialGroup()
                .addContainerGap(241, Short.MAX_VALUE)
                .addComponent(jPanel24, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(193, 193, 193))
        );
        jPanel20Layout.setVerticalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(jPanel24, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(83, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Help", jPanel20);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed
        // TODO add your handling code here:
        try{
            MessageFormat header=new MessageFormat("Christ Messenger");
            MessageFormat footer=new MessageFormat("Page {0,number,integer}");
            displaychristMessengers.print(JTable.PrintMode.NORMAL,header,footer);
        }
        catch(java.awt.print.PrinterException e){
            System.err.format("Cannot print %%n",e.getMessage());
        }
    }//GEN-LAST:event_jToggleButton1ActionPerformed

    private void jToggleButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton3ActionPerformed
        // TODO add your handling code here:
        try{
            MessageFormat header=new MessageFormat("End time Herald");
            MessageFormat footer=new MessageFormat("Page {0,number,integer}");
            displayEndTimeHerald.print(JTable.PrintMode.NORMAL,header,footer);
        }
        catch(java.awt.print.PrinterException e){
            System.err.format("Cannot print %%n",e.getMessage());
        }
    }//GEN-LAST:event_jToggleButton3ActionPerformed

    private void jToggleButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton5ActionPerformed
        // TODO add your handling code here:
        try{
            MessageFormat header=new MessageFormat("JUMUIYA LIST");
            MessageFormat footer=new MessageFormat("Page {0,number,integer}");
            displayFirstFruit.print(JTable.PrintMode.NORMAL,header,footer);
        }
        catch(java.awt.print.PrinterException e){
            System.err.format("Cannot print %%n",e.getMessage());
        }
    }//GEN-LAST:event_jToggleButton5ActionPerformed

    private void jToggleButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton7ActionPerformed
        // TODO add your handling code here:
        try{
            MessageFormat header=new MessageFormat("New Zion");
            MessageFormat footer=new MessageFormat("Page {0,number,integer}");
            displayNewZion.print(JTable.PrintMode.NORMAL,header,footer);
        }
        catch(java.awt.print.PrinterException e){
            System.err.format("Cannot print %%n",e.getMessage());
        }
    }//GEN-LAST:event_jToggleButton7ActionPerformed

    private void jToggleButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton9ActionPerformed
        // TODO add your handling code here:
        try{
            MessageFormat header=new MessageFormat("Present Truth");
            MessageFormat footer=new MessageFormat("Page {0,number,integer}");
            displayPresentTruth.print(JTable.PrintMode.NORMAL,header,footer);
        }
        catch(java.awt.print.PrinterException e){
            System.err.format("Cannot print %%n",e.getMessage());
        }
    }//GEN-LAST:event_jToggleButton9ActionPerformed

    private void jToggleButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton11ActionPerformed
        // TODO add your handling code here:
        try{
            MessageFormat header=new MessageFormat("Choir");
            MessageFormat footer=new MessageFormat("Page {0,number,integer}");
            displayChoir.print(JTable.PrintMode.NORMAL,header,footer);
        }
        catch(java.awt.print.PrinterException e){
            System.err.format("Cannot print %%n",e.getMessage());
        }
    }//GEN-LAST:event_jToggleButton11ActionPerformed

    private void jToggleButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton13ActionPerformed
        // TODO add your handling code here:
        try{
            MessageFormat header=new MessageFormat("Executive List");
            MessageFormat footer=new MessageFormat("Page {0,number,integer}");
            displayExecutives.print(JTable.PrintMode.NORMAL,header,footer);
        }
        catch(java.awt.print.PrinterException e){
            System.err.format("Cannot print %%n",e.getMessage());
        }
    }//GEN-LAST:event_jToggleButton13ActionPerformed

    private void jToggleButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton15ActionPerformed
        // TODO add your handling code here:
        try{
            MessageFormat header=new MessageFormat("Members List");
            MessageFormat footer=new MessageFormat("Page {0,number,integer}");
            displayMembers.print(JTable.PrintMode.NORMAL,header,footer);
        }
        catch(java.awt.print.PrinterException e){
            System.err.format("Cannot print %%n",e.getMessage());
        }
    }//GEN-LAST:event_jToggleButton15ActionPerformed

    private void jToggleButton23ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton23ActionPerformed
        // TODO add your handling code here:
        reportchristmessengers();
    }//GEN-LAST:event_jToggleButton23ActionPerformed

    private void jToggleButton22ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton22ActionPerformed
        // TODO add your handling code here:
        reportfirstfruit();
    }//GEN-LAST:event_jToggleButton22ActionPerformed

    private void btnMembersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMembersActionPerformed
        // TODO add your handling code here:
        reportsMemebers();
    }//GEN-LAST:event_btnMembersActionPerformed

    private void jToggleButton21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton21ActionPerformed
        // TODO add your handling code here:
        reportsChoir();
    }//GEN-LAST:event_jToggleButton21ActionPerformed

    private void jToggleButton18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton18ActionPerformed
        // TODO add your handling code here:
        reportEndtimeherald();
    }//GEN-LAST:event_jToggleButton18ActionPerformed

    private void jToggleButton20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton20ActionPerformed
        // TODO add your handling code here:
        reportnewZion();
    }//GEN-LAST:event_jToggleButton20ActionPerformed

    private void jToggleButton19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton19ActionPerformed
        // TODO add your handling code here:
        reportPresentTruth();
    }//GEN-LAST:event_jToggleButton19ActionPerformed

    private void selectyearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectyearActionPerformed
        // TODO add your handling code here:
        reportyear();
    }//GEN-LAST:event_selectyearActionPerformed

    private void selectgenderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectgenderActionPerformed
        // TODO add your handling code here:
        reportgender();
    }//GEN-LAST:event_selectgenderActionPerformed

    private void selectGroupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectGroupActionPerformed
        reportGroups();

        // TODO add your handling code here:
    }//GEN-LAST:event_selectGroupActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton btnMembers;
    private javax.swing.JTable displayChoir;
    private javax.swing.JTable displayEndTimeHerald;
    private javax.swing.JTable displayExecutives;
    private javax.swing.JTable displayFirstFruit;
    private javax.swing.JTable displayMembers;
    private javax.swing.JTable displayNewZion;
    private javax.swing.JTable displayPresentTruth;
    private javax.swing.JTable displaychristMessengers;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JPanel jPanel24;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JToggleButton jToggleButton10;
    private javax.swing.JToggleButton jToggleButton11;
    private javax.swing.JToggleButton jToggleButton12;
    private javax.swing.JToggleButton jToggleButton13;
    private javax.swing.JToggleButton jToggleButton14;
    private javax.swing.JToggleButton jToggleButton15;
    private javax.swing.JToggleButton jToggleButton16;
    private javax.swing.JToggleButton jToggleButton18;
    private javax.swing.JToggleButton jToggleButton19;
    private javax.swing.JToggleButton jToggleButton2;
    private javax.swing.JToggleButton jToggleButton20;
    private javax.swing.JToggleButton jToggleButton21;
    private javax.swing.JToggleButton jToggleButton22;
    private javax.swing.JToggleButton jToggleButton23;
    private javax.swing.JToggleButton jToggleButton3;
    private javax.swing.JToggleButton jToggleButton4;
    private javax.swing.JToggleButton jToggleButton5;
    private javax.swing.JToggleButton jToggleButton6;
    private javax.swing.JToggleButton jToggleButton7;
    private javax.swing.JToggleButton jToggleButton8;
    private javax.swing.JToggleButton jToggleButton9;
    private javax.swing.JComboBox<String> selectGroup;
    private javax.swing.JComboBox<String> selectgender;
    private javax.swing.JComboBox<String> selectyear;
    public static javax.swing.JLabel totalChoir;
    public static javax.swing.JLabel totalChristMessenger;
    public static javax.swing.JLabel totalEndtime;
    public static javax.swing.JLabel totalExec;
    public static javax.swing.JLabel totalFirstfruit;
    public static javax.swing.JLabel totalMembers;
    public static javax.swing.JLabel totalNewzion;
    public static javax.swing.JLabel totalPresenttruth;
    // End of variables declaration//GEN-END:variables


        public void displayMembers(){
         
            DefaultTableModel model=(DefaultTableModel) displayMembers.getModel();
                model.setRowCount(0);
                
        int component;
        Connection con=null;
        ResultSet rs;
        Statement st;
        PreparedStatement pst=null;
                int count=1;
        try{
            String dbname="sda";
            String pass="";
            String username="root";
            String Url="jdbc:mysql://localhost:3306/";
            String Drivers="com.mysql.jdbc.Driver";
            Class.forName(Drivers);

            con=DriverManager.getConnection(Url+dbname,username,pass);
            //select from multipal table
            String sql="SELECT * FROM registermembers";
             if(sql.equals("")){
                JOptionPane.showMessageDialog(this,"No Records!");
            }else{
            st=con.createStatement();
            rs=st.executeQuery(sql);
            model=(DefaultTableModel) displayMembers.getModel();
            while (rs.next()){
                
             // model.setRowCount(model.getRowCount()+1);
               int id=count;
                String nm=rs.getString("Name");
                String rg=rs.getString("regNumber");
                 String phn=rs.getString("phone");
                String g=rs.getString("Gender");
                String bsf=rs.getString("bsf");
                String yr=rs.getString("Year");

                

                model.addRow(new Object[]{id,nm,rg,phn,g,bsf,yr});
            
                count=count+1;       
           }
            
             if(model.getRowCount()==0){
            JOptionPane.showMessageDialog(this,"No Record Match!");
            
            }else{
            
            }
            }
//            JOptionPane.showMessageDialog(this,"No RECORD FOUND");
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(this,"NO RECORDS FOUND"+e.getLocalizedMessage());
        }
     }
        
        
//=============================================church executives-===================================
        
        public void displayExecutives(){
         
            DefaultTableModel model=(DefaultTableModel) displayExecutives.getModel();
                model.setRowCount(0);
                
        int component;
        Connection con=null;
        ResultSet rs;
        Statement st;
        PreparedStatement pst=null;
                int count=1;
        try{
            String dbname="sda";
            String pass="";
            String username="root";
            String Url="jdbc:mysql://localhost:3306/";
            String Drivers="com.mysql.jdbc.Driver";
            Class.forName(Drivers);

            con=DriverManager.getConnection(Url+dbname,username,pass);
            //select from multipal table
            String sql="SELECT * FROM executives";
             if(sql.equals("")){
                JOptionPane.showMessageDialog(this,"No Records!");
            }else{
            st=con.createStatement();
            rs=st.executeQuery(sql);
            model=(DefaultTableModel) displayExecutives.getModel();
            while (rs.next()){
                
             // model.setRowCount(model.getRowCount()+1);
               int id=count;
                String nm=rs.getString("Name");
                String rg=rs.getString("Reg");
                String phn=rs.getString("Phone");
                String g=rs.getString("Gender");
                String bsf=rs.getString("role");
                String yr=rs.getString("Year");

                

                model.addRow(new Object[]{id,nm,rg,phn,g,bsf,yr});
            
                count=count+1;       
           }
            
             if(model.getRowCount()==0){
            JOptionPane.showMessageDialog(this,"No Record Match!");
            
            }else{
            
            }
            }
//            JOptionPane.showMessageDialog(this,"No RECORD FOUND");
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(this,"NO RECORDS FOUND"+e.getLocalizedMessage());
        }
     }
        
        //=============================================christ Messenger-===================================
        
        public void displayChristMsg(){
         
            DefaultTableModel model=(DefaultTableModel) displaychristMessengers.getModel();
                model.setRowCount(0);
                
        int component;
        Connection con=null;
        ResultSet rs;
        Statement st;
        PreparedStatement pst=null;
                int count=1;
        try{
            String dbname="sda";
            String pass="";
            String username="root";
            String Url="jdbc:mysql://localhost:3306/";
            String Drivers="com.mysql.jdbc.Driver";
            Class.forName(Drivers);

            con=DriverManager.getConnection(Url+dbname,username,pass);
            //select from multipal table
            String sql="SELECT * FROM christmessengers";
             if(sql.equals("")){
                JOptionPane.showMessageDialog(this,"No Records!");
            }else{
            st=con.createStatement();
            rs=st.executeQuery(sql);
            model=(DefaultTableModel) displaychristMessengers.getModel();
            while (rs.next()){
               int id=count;
                String nm=rs.getString("Name");
                String rg=rs.getString("RegNumber");
                String phn=rs.getString("PhoneNumber");
                String g=rs.getString("gender");
                String bsf=rs.getString("role");
                String yr=rs.getString("Year");
                model.addRow(new Object[]{id,nm,rg,phn,g,bsf,yr});
                count=count+1;       
           }
            
             if(model.getRowCount()==0){
            JOptionPane.showMessageDialog(this,"No Record Match!");
            
            }else{
            
            }
            }
//            JOptionPane.showMessageDialog(this,"No RECORD FOUND");
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(this,"NO RECORDS FOUND"+e.getLocalizedMessage());
        }
     }
        //=============================================End Time Herald-===================================
        public void displayEndTimeHerald(){
         
            DefaultTableModel model=(DefaultTableModel) displayEndTimeHerald.getModel();
                model.setRowCount(0);
                
        int component;
        Connection con=null;
        ResultSet rs;
        Statement st;
        PreparedStatement pst=null;
                int count=1;
        try{
            String dbname="sda";
            String pass="";
            String username="root";
            String Url="jdbc:mysql://localhost:3306/";
            String Drivers="com.mysql.jdbc.Driver";
            Class.forName(Drivers);

            con=DriverManager.getConnection(Url+dbname,username,pass);
            //select from multipal table
            String sql="SELECT * FROM endtimeherald";
             if(sql.equals("")){
                JOptionPane.showMessageDialog(this,"No Records!");
            }else{
            st=con.createStatement();
            rs=st.executeQuery(sql);
            model=(DefaultTableModel) displayEndTimeHerald.getModel();
            while (rs.next()){
               int id=count;
                String nm=rs.getString("Name");
                String rg=rs.getString("RegNumber");
                String phn=rs.getString("PhoneNumber");
                String g=rs.getString("gender");
                String bsf=rs.getString("role");
                String yr=rs.getString("Year");
                model.addRow(new Object[]{id,nm,rg,phn,g,bsf,yr});
                count=count+1;       
           }
            
             if(model.getRowCount()==0){
            JOptionPane.showMessageDialog(this,"No Record Match!");
            
            }else{
            
            }
            }
//            JOptionPane.showMessageDialog(this,"No RECORD FOUND");
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(this,"NO RECORDS FOUND"+e.getLocalizedMessage());
        }
     }
        //=============================================First Fruit===================================
        public void displayFirstFruit(){
         
            DefaultTableModel model=(DefaultTableModel) displayFirstFruit.getModel();
                model.setRowCount(0);
                
        int component;
        Connection con=null;
        ResultSet rs;
        Statement st;
        PreparedStatement pst=null;
                int count=1;
        try{
            String dbname="sda";
            String pass="";
            String username="root";
            String Url="jdbc:mysql://localhost:3306/";
            String Drivers="com.mysql.jdbc.Driver";
            Class.forName(Drivers);

            con=DriverManager.getConnection(Url+dbname,username,pass);
            //select from multipal table
            String sql="SELECT * FROM firstfruit";
             if(sql.equals("")){
                JOptionPane.showMessageDialog(this,"No Records!");
            }else{
            st=con.createStatement();
            rs=st.executeQuery(sql);
            model=(DefaultTableModel) displayFirstFruit.getModel();
            while (rs.next()){
               int id=count;
                String nm=rs.getString("Name");
                String rg=rs.getString("RegNumber");
                String phn=rs.getString("PhoneNumber");
                String g=rs.getString("gender");
                String bsf=rs.getString("role");
                String yr=rs.getString("Year");
                model.addRow(new Object[]{id,nm,rg,phn,g,bsf,yr});
                count=count+1;       
           }
            
             if(model.getRowCount()==0){
            JOptionPane.showMessageDialog(this,"No Record Match!");
            
            }else{
            
            }
            }
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(this,"NO RECORDS FOUND"+e.getLocalizedMessage());
        }
     }
        //=============================================New Zion-===================================
        public void displayNewZion(){
         
            DefaultTableModel model=(DefaultTableModel) displayNewZion.getModel();
                model.setRowCount(0);
                
        int component;
        Connection con=null;
        ResultSet rs;
        Statement st;
        PreparedStatement pst=null;
                int count=1;
        try{
            String dbname="sda";
            String pass="";
            String username="root";
            String Url="jdbc:mysql://localhost:3306/";
            String Drivers="com.mysql.jdbc.Driver";
            Class.forName(Drivers);

            con=DriverManager.getConnection(Url+dbname,username,pass);
            //select from multipal table
            String sql="SELECT * FROM newzion";
             if(sql.equals("")){
                JOptionPane.showMessageDialog(this,"No Records!");
            }else{
            st=con.createStatement();
            rs=st.executeQuery(sql);
            model=(DefaultTableModel) displayNewZion.getModel();
            while (rs.next()){
               int id=count;
                String nm=rs.getString("Name");
                String rg=rs.getString("RegNumber");
                String phn=rs.getString("PhoneNumber");
                String g=rs.getString("gender");
                String bsf=rs.getString("role");
                String yr=rs.getString("Year");
                model.addRow(new Object[]{id,nm,rg,phn,g,bsf,yr});
                count=count+1;       
           }
            
             if(model.getRowCount()==0){
            JOptionPane.showMessageDialog(this,"No Record Match!");
            
            }else{
            
            }
            }
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(this,"NO RECORDS FOUND"+e.getLocalizedMessage());
        }
     }
      //=============================================present Truth===================================
        public void displayPresentTruth(){
         
            DefaultTableModel model=(DefaultTableModel) displayPresentTruth.getModel();
                model.setRowCount(0);
                
        int component;
        Connection con=null;
        ResultSet rs;
        Statement st;
        PreparedStatement pst=null;
                int count=1;
        try{
            String dbname="sda";
            String pass="";
            String username="root";
            String Url="jdbc:mysql://localhost:3306/";
            String Drivers="com.mysql.jdbc.Driver";
            Class.forName(Drivers);

            con=DriverManager.getConnection(Url+dbname,username,pass);
            //select from multipal table
            String sql="SELECT * FROM presenttruth";
             if(sql.equals("")){
                JOptionPane.showMessageDialog(this,"No Records!");
            }else{
            st=con.createStatement();
            rs=st.executeQuery(sql);
            model=(DefaultTableModel) displayPresentTruth.getModel();
            while (rs.next()){
               int id=count;
                String nm=rs.getString("Name");
                String rg=rs.getString("RegNumber");
                String phn=rs.getString("PhoneNumber");
                String g=rs.getString("gender");
                String bsf=rs.getString("role");
                String yr=rs.getString("Year");
                model.addRow(new Object[]{id,nm,rg,phn,g,bsf,yr});
                count=count+1;       
           }
            
             if(model.getRowCount()==0){
            JOptionPane.showMessageDialog(this,"No Record Match!");
            
            }else{
            
            }
            }
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(this,"NO RECORDS FOUND"+e.getLocalizedMessage());
        }
     }  
            //=============================================present Truth===================================
        public void displayChoir(){
         
            DefaultTableModel model=(DefaultTableModel) displayChoir.getModel();
                model.setRowCount(0);
                
        int component;
        Connection con=null;
        ResultSet rs;
        Statement st;
        PreparedStatement pst=null;
                int count=1;
        try{
            String dbname="sda";
            String pass="";
            String username="root";
            String Url="jdbc:mysql://localhost:3306/";
            String Drivers="com.mysql.jdbc.Driver";
            Class.forName(Drivers);

            con=DriverManager.getConnection(Url+dbname,username,pass);
            //select from multipal table
            String sql="SELECT * FROM choir";
             if(sql.equals("")){
                JOptionPane.showMessageDialog(this,"No Records!");
            }else{
            st=con.createStatement();
            rs=st.executeQuery(sql);
            model=(DefaultTableModel) displayChoir.getModel();
            while (rs.next()){
               int id=count;
                String nm=rs.getString("Name");
                String rg=rs.getString("RegNumber");
                String phn=rs.getString("PhoneNumber");
                String g=rs.getString("gender");
                String bsf=rs.getString("role");
                String yr=rs.getString("Year");
                model.addRow(new Object[]{id,nm,rg,phn,g,bsf,yr});
                count=count+1;       
           }
            
             if(model.getRowCount()==0){
            JOptionPane.showMessageDialog(this,"No Record Match!");
            
            }else{
            
            }
            }
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(this,"NO RECORDS FOUND"+e.getLocalizedMessage());
        }
     }  
        
        
//        Reports of a;ll groups amd year of studies
//        
private void reportsMemebers(){
        //  final String me = (String) btnMembers.getSelectedItem();
       new Thread() {
        @Override
        public void run() {
    try {
       // maskerPane.setVisible(true);
         ImageIcon icon = new ImageIcon(getClass().getResource("/sms_project/images/10.gif"));
      JOptionPane.showMessageDialog(null, "Please wait while Processing Report\nClick OK to continue","",JOptionPane.INFORMATION_MESSAGE,icon);

        String reportName = "SDA";
        Connect cc= new Connect();
       conn=cc.connect();
        InputStream ur17 = getClass().getResourceAsStream("/sms_project/Reports/members.jrxml");
        JasperDesign dis = JRXmlLoader.load(ur17);

            //String sql = "SELECT Id,Name,regNumber,Phone_Number,Jumuiya,Year_Of_Study FROM church_members_records where Year_Of_Study =" + me + "";
           String sql="SELECT * FROM registermembers WHERE year !=\"Associate\"";
            JRDesignQuery newQuery = new JRDesignQuery();
            newQuery.setText(sql);
            dis.setQuery(newQuery);
            JasperReport rep = JasperCompileManager.compileReport(dis);

            JasperPrint jasPrint = JasperFillManager.fillReport(rep, null, conn);

            JRExporter exporter = new JRPdfExporter();

            exporter.setParameter(JRExporterParameter.JASPER_PRINT, jasPrint);
            exporter.setParameter(JRExporterParameter.OUTPUT_STREAM, new FileOutputStream(reportName + ".pdf")); // your output goes here

            exporter.exportReport();
            JasperViewer.viewReport(jasPrint);

//          
             Notifications notificationBuilder = Notifications.create()
            .title("Report generation complete")
            .text("please wait")
            .hideAfter(Duration.seconds(3))
            .darkStyle()
            .position(Pos.CENTER)
            .onAction(new EventHandler<ActionEvent>() {
                @Override
                public void handle(ActionEvent event) {

                    JOptionPane.showMessageDialog(null,"cliced on notification");
                }
            });
    notificationBuilder.showConfirm();

            } catch (JRException ex) {
                JOptionPane.showMessageDialog(null,"No data found"+ex.getLocalizedMessage());
               // Logger.getLogger(FXMLDocumentController.class.getName()).log(Level.SEVERE, null, ex.getLocalizedMessage());

            } catch (FileNotFoundException ex) {
                 JOptionPane.showMessageDialog(null,ex);
               // Logger.getLogger(FXMLDocumentController.class.getName()).log(Level.SEVERE, null, ex.getLocalizedMessage());
            } 

        }
    }.start();


}

//=================print Choir=======================================================
private void reportsChoir(){
        //  final String me = (String) btnMembers.getSelectedItem();
       new Thread() {
        @Override
        public void run() {
    try {
       // maskerPane.setVisible(true);
         ImageIcon icon = new ImageIcon(getClass().getResource("/sms_project/images/10.gif"));
      JOptionPane.showMessageDialog(null, "Please wait while Processing Report\nClick OK to continue","",JOptionPane.INFORMATION_MESSAGE,icon);

        String reportName = "SDA";
        Connect cc= new Connect();
       conn=cc.connect();
        InputStream ur17 = getClass().getResourceAsStream("/sms_project/Reports/groups.jrxml");
        JasperDesign dis = JRXmlLoader.load(ur17);

            //String sql = "SELECT Id,Name,regNumber,Phone_Number,Jumuiya,Year_Of_Study FROM church_members_records where Year_Of_Study =" + me + "";
           String sql="SELECT * FROM choir WHERE year !=\"Associate\"";
            JRDesignQuery newQuery = new JRDesignQuery();
            newQuery.setText(sql);
            dis.setQuery(newQuery);
            JasperReport rep = JasperCompileManager.compileReport(dis);

            JasperPrint jasPrint = JasperFillManager.fillReport(rep, null, conn);

            JRExporter exporter = new JRPdfExporter();

            exporter.setParameter(JRExporterParameter.JASPER_PRINT, jasPrint);
            exporter.setParameter(JRExporterParameter.OUTPUT_STREAM, new FileOutputStream(reportName + ".pdf")); // your output goes here

            exporter.exportReport();
            JasperViewer.viewReport(jasPrint);

//          
             Notifications notificationBuilder = Notifications.create()
            .title("Report generation complete")
            .text("please wait")
            .hideAfter(Duration.seconds(3))
            .darkStyle()
            .position(Pos.CENTER)
            .onAction(new EventHandler<ActionEvent>() {
                @Override
                public void handle(ActionEvent event) {

                    JOptionPane.showMessageDialog(null,"clicked on notification");
                }
            });
    notificationBuilder.showConfirm();

            } catch (JRException ex) {
                JOptionPane.showMessageDialog(null,"No data found"+ex.getLocalizedMessage());
               // Logger.getLogger(FXMLDocumentController.class.getName()).log(Level.SEVERE, null, ex.getLocalizedMessage());

            } catch (FileNotFoundException ex) {
                 JOptionPane.showMessageDialog(null,ex);
               // Logger.getLogger(FXMLDocumentController.class.getName()).log(Level.SEVERE, null, ex.getLocalizedMessage());
            } 
        }
    }.start();
}
//======================================print end time herald===================================
private void reportEndtimeherald(){
        //  final String me = (String) btnMembers.getSelectedItem();
       new Thread() {
        @Override
        public void run() {
    try {
       // maskerPane.setVisible(true);
         ImageIcon icon = new ImageIcon(getClass().getResource("/sms_project/images/10.gif"));
      JOptionPane.showMessageDialog(null, "Please wait while Processing Report\nClick OK to continue","",JOptionPane.INFORMATION_MESSAGE,icon);

        String reportName = "SDA";
        Connect cc= new Connect();
       conn=cc.connect();
        InputStream ur17 = getClass().getResourceAsStream("/sms_project/Reports/groups.jrxml");
        JasperDesign dis = JRXmlLoader.load(ur17);

            //String sql = "SELECT Id,Name,regNumber,Phone_Number,Jumuiya,Year_Of_Study FROM church_members_records where Year_Of_Study =" + me + "";
           String sql="SELECT * FROM endtimeherald WHERE year !=\"Associate\"";
            JRDesignQuery newQuery = new JRDesignQuery();
            newQuery.setText(sql);
            dis.setQuery(newQuery);
            JasperReport rep = JasperCompileManager.compileReport(dis);

            JasperPrint jasPrint = JasperFillManager.fillReport(rep, null, conn);

            JRExporter exporter = new JRPdfExporter();

            exporter.setParameter(JRExporterParameter.JASPER_PRINT, jasPrint);
            exporter.setParameter(JRExporterParameter.OUTPUT_STREAM, new FileOutputStream(reportName + ".pdf")); // your output goes here

            exporter.exportReport();
            JasperViewer.viewReport(jasPrint);

//          
             Notifications notificationBuilder = Notifications.create()
            .title("Report generation complete")
            .text("please wait")
            .hideAfter(Duration.seconds(3))
            .darkStyle()
            .position(Pos.CENTER)
            .onAction(new EventHandler<ActionEvent>() {
                @Override
                public void handle(ActionEvent event) {

                    JOptionPane.showMessageDialog(null,"cliced on notification");
                }
            });
    notificationBuilder.showConfirm();

            } catch (JRException ex) {
                JOptionPane.showMessageDialog(null,"No data found"+ex.getLocalizedMessage());
               // Logger.getLogger(FXMLDocumentController.class.getName()).log(Level.SEVERE, null, ex.getLocalizedMessage());

            } catch (FileNotFoundException ex) {
                 JOptionPane.showMessageDialog(null,ex);
               // Logger.getLogger(FXMLDocumentController.class.getName()).log(Level.SEVERE, null, ex.getLocalizedMessage());
            } 

        }
    }.start();


}

//======================================print end time herald===================================
private void reportfirstfruit(){
        //  final String me = (String) btnMembers.getSelectedItem();
       new Thread() {
        @Override
        public void run() {
    try {
       // maskerPane.setVisible(true);
         ImageIcon icon = new ImageIcon(getClass().getResource("/sms_project/images/10.gif"));
      JOptionPane.showMessageDialog(null, "Please wait while Processing Report\nClick OK to continue","",JOptionPane.INFORMATION_MESSAGE,icon);

        String reportName = "SDA";
        Connect cc= new Connect();
       conn=cc.connect();
        InputStream ur17 = getClass().getResourceAsStream("/sms_project/Reports/groups.jrxml");
        JasperDesign dis = JRXmlLoader.load(ur17);

            //String sql = "SELECT Id,Name,regNumber,Phone_Number,Jumuiya,Year_Of_Study FROM church_members_records where Year_Of_Study =" + me + "";
           String sql="SELECT * FROM firstfruit WHERE year !=\"Associate\"";
            JRDesignQuery newQuery = new JRDesignQuery();
            newQuery.setText(sql);
            dis.setQuery(newQuery);
            JasperReport rep = JasperCompileManager.compileReport(dis);

            JasperPrint jasPrint = JasperFillManager.fillReport(rep, null, conn);

            JRExporter exporter = new JRPdfExporter();

            exporter.setParameter(JRExporterParameter.JASPER_PRINT, jasPrint);
            exporter.setParameter(JRExporterParameter.OUTPUT_STREAM, new FileOutputStream(reportName + ".pdf")); // your output goes here

            exporter.exportReport();
            JasperViewer.viewReport(jasPrint);

//          
             Notifications notificationBuilder = Notifications.create()
            .title("Report generation complete")
            .text("please wait")
            .hideAfter(Duration.seconds(3))
            .darkStyle()
            .position(Pos.CENTER)
            .onAction(new EventHandler<ActionEvent>() {
                @Override
                public void handle(ActionEvent event) {

                    JOptionPane.showMessageDialog(null,"cliced on notification");
                }
            });
    notificationBuilder.showConfirm();

            } catch (JRException ex) {
                JOptionPane.showMessageDialog(null,"No data found"+ex.getLocalizedMessage());
               // Logger.getLogger(FXMLDocumentController.class.getName()).log(Level.SEVERE, null, ex.getLocalizedMessage());

            } catch (FileNotFoundException ex) {
                 JOptionPane.showMessageDialog(null,ex);
               // Logger.getLogger(FXMLDocumentController.class.getName()).log(Level.SEVERE, null, ex.getLocalizedMessage());
            } 

        }
    }.start();


}
//========================newZion-==========================================
private void reportnewZion(){
        //  final String me = (String) btnMembers.getSelectedItem();
       new Thread() {
        @Override
        public void run() {
    try {
       // maskerPane.setVisible(true);
         ImageIcon icon = new ImageIcon(getClass().getResource("/sms_project/images/10.gif"));
      JOptionPane.showMessageDialog(null, "Please wait while Processing Report\nClick OK to continue","",JOptionPane.INFORMATION_MESSAGE,icon);

        String reportName = "SDA";
        Connect cc= new Connect();
       conn=cc.connect();
        InputStream ur17 = getClass().getResourceAsStream("/sms_project/Reports/groups.jrxml");
        JasperDesign dis = JRXmlLoader.load(ur17);

            //String sql = "SELECT Id,Name,regNumber,Phone_Number,Jumuiya,Year_Of_Study FROM church_members_records where Year_Of_Study =" + me + "";
           String sql="SELECT * FROM newzion WHERE year !=\"Associate\"";
            JRDesignQuery newQuery = new JRDesignQuery();
            newQuery.setText(sql);
            dis.setQuery(newQuery);
            JasperReport rep = JasperCompileManager.compileReport(dis);

            JasperPrint jasPrint = JasperFillManager.fillReport(rep, null, conn);

            JRExporter exporter = new JRPdfExporter();

            exporter.setParameter(JRExporterParameter.JASPER_PRINT, jasPrint);
            exporter.setParameter(JRExporterParameter.OUTPUT_STREAM, new FileOutputStream(reportName + ".pdf")); // your output goes here

            exporter.exportReport();
            JasperViewer.viewReport(jasPrint);

//          
             Notifications notificationBuilder = Notifications.create()
            .title("Report generation complete")
            .text("please wait")
            .hideAfter(Duration.seconds(3))
            .darkStyle()
            .position(Pos.CENTER)
            .onAction(new EventHandler<ActionEvent>() {
                @Override
                public void handle(ActionEvent event) {

                    JOptionPane.showMessageDialog(null,"cliced on notification");
                }
            });
    notificationBuilder.showConfirm();

            } catch (JRException ex) {
                JOptionPane.showMessageDialog(null,"No data found"+ex.getLocalizedMessage());
               // Logger.getLogger(FXMLDocumentController.class.getName()).log(Level.SEVERE, null, ex.getLocalizedMessage());

            } catch (FileNotFoundException ex) {
                 JOptionPane.showMessageDialog(null,ex);
               // Logger.getLogger(FXMLDocumentController.class.getName()).log(Level.SEVERE, null, ex.getLocalizedMessage());
            } 

        }
    }.start();
}
//==============================
private void reportchristmessengers(){
        //  final String me = (String) btnMembers.getSelectedItem();
       new Thread() {
        @Override
        public void run() {
    try {
       // maskerPane.setVisible(true);
         ImageIcon icon = new ImageIcon(getClass().getResource("/sms_project/images/10.gif"));
      JOptionPane.showMessageDialog(null, "Please wait while Processing Report\nClick OK to continue","",JOptionPane.INFORMATION_MESSAGE,icon);

        String reportName = "SDA";
        Connect cc= new Connect();
       conn=cc.connect();
        InputStream ur17 = getClass().getResourceAsStream("/sms_project/Reports/groups.jrxml");
        JasperDesign dis = JRXmlLoader.load(ur17);

            //String sql = "SELECT Id,Name,regNumber,Phone_Number,Jumuiya,Year_Of_Study FROM church_members_records where Year_Of_Study =" + me + "";
           String sql="SELECT * FROM christmessengers WHERE year !=\"Associate\"";
            JRDesignQuery newQuery = new JRDesignQuery();
            newQuery.setText(sql);
            dis.setQuery(newQuery);
            JasperReport rep = JasperCompileManager.compileReport(dis);

            JasperPrint jasPrint = JasperFillManager.fillReport(rep, null, conn);

            JRExporter exporter = new JRPdfExporter();

            exporter.setParameter(JRExporterParameter.JASPER_PRINT, jasPrint);
            exporter.setParameter(JRExporterParameter.OUTPUT_STREAM, new FileOutputStream(reportName + ".pdf")); // your output goes here

            exporter.exportReport();
            JasperViewer.viewReport(jasPrint);

//          
             Notifications notificationBuilder = Notifications.create()
            .title("Report generation complete")
            .text("please wait")
            .hideAfter(Duration.seconds(3))
            .darkStyle()
            .position(Pos.CENTER)
            .onAction(new EventHandler<ActionEvent>() {
                @Override
                public void handle(ActionEvent event) {

                    JOptionPane.showMessageDialog(null,"cliced on notification");
                }
            });
    notificationBuilder.showConfirm();

            } catch (JRException ex) {
                JOptionPane.showMessageDialog(null,"No data found"+ex.getLocalizedMessage());
               // Logger.getLogger(FXMLDocumentController.class.getName()).log(Level.SEVERE, null, ex.getLocalizedMessage());

            } catch (FileNotFoundException ex) {
                 JOptionPane.showMessageDialog(null,ex);
               // Logger.getLogger(FXMLDocumentController.class.getName()).log(Level.SEVERE, null, ex.getLocalizedMessage());
            } 

        }
    }.start();


}

//==========================================present Truth================
private void reportPresentTruth(){
        //  final String me = (String) btnMembers.getSelectedItem();
       new Thread() {
        @Override
        public void run() {
    try {
       // maskerPane.setVisible(true);
         ImageIcon icon = new ImageIcon(getClass().getResource("/sms_project/images/10.gif"));
      JOptionPane.showMessageDialog(null, "Please wait while Processing Report\nClick OK to continue","",JOptionPane.INFORMATION_MESSAGE,icon);

        String reportName = "SDA";
        Connect cc= new Connect();
       conn=cc.connect();
        InputStream ur17 = getClass().getResourceAsStream("/sms_project/Reports/groups.jrxml");
        JasperDesign dis = JRXmlLoader.load(ur17);

            //String sql = "SELECT Id,Name,regNumber,Phone_Number,Jumuiya,Year_Of_Study FROM church_members_records where Year_Of_Study =" + me + "";
           String sql="SELECT * FROM PresentTruth WHERE year !=\"Associate\"";
            JRDesignQuery newQuery = new JRDesignQuery();
            newQuery.setText(sql);
            dis.setQuery(newQuery);
            JasperReport rep = JasperCompileManager.compileReport(dis);

            JasperPrint jasPrint = JasperFillManager.fillReport(rep, null, conn);

            JRExporter exporter = new JRPdfExporter();

            exporter.setParameter(JRExporterParameter.JASPER_PRINT, jasPrint);
            exporter.setParameter(JRExporterParameter.OUTPUT_STREAM, new FileOutputStream(reportName + ".pdf")); // your output goes here

            exporter.exportReport();
            JasperViewer.viewReport(jasPrint);

//          
             Notifications notificationBuilder = Notifications.create()
            .title("Report generation complete")
            .text("please wait")
            .hideAfter(Duration.seconds(3))
            .darkStyle()
            .position(Pos.CENTER)
            .onAction(new EventHandler<ActionEvent>() {
                @Override
                public void handle(ActionEvent event) {

                    JOptionPane.showMessageDialog(null,"cliced on notification");
                }
            });
    notificationBuilder.showConfirm();

            } catch (JRException ex) {
                JOptionPane.showMessageDialog(null,"No data found"+ex.getLocalizedMessage());
               // Logger.getLogger(FXMLDocumentController.class.getName()).log(Level.SEVERE, null, ex.getLocalizedMessage());

            } catch (FileNotFoundException ex) {
                 JOptionPane.showMessageDialog(null,ex);
               // Logger.getLogger(FXMLDocumentController.class.getName()).log(Level.SEVERE, null, ex.getLocalizedMessage());
            } 

        }
    }.start();
}
//===========================year=============================

private void reportyear(){
          final String me = (String) selectyear.getSelectedItem();
       new Thread() {
        @Override
        public void run() {
    try {
       // maskerPane.setVisible(true);
         ImageIcon icon = new ImageIcon(getClass().getResource("/sms_project/images/10.gif"));
      JOptionPane.showMessageDialog(null, "Please wait while Processing Report\nClick OK to continue","",JOptionPane.INFORMATION_MESSAGE,icon);

        String reportName = "SDA";
        Connect cc= new Connect();
       conn=cc.connect();
        InputStream ur17 = getClass().getResourceAsStream("/sms_project/Reports/year.jrxml");
        JasperDesign dis = JRXmlLoader.load(ur17);

            //String sql = "SELECT Id,Name,regNumber,Phone_Number,Jumuiya,Year_Of_Study FROM church_members_records where Year_Of_Study =" + me + "";
           String sql="SELECT * FROM registermembers WHERE year ='"+me+"'";
            JRDesignQuery newQuery = new JRDesignQuery();
            newQuery.setText(sql);
            dis.setQuery(newQuery);
            JasperReport rep = JasperCompileManager.compileReport(dis);

            JasperPrint jasPrint = JasperFillManager.fillReport(rep, null, conn);

            JRExporter exporter = new JRPdfExporter();

            exporter.setParameter(JRExporterParameter.JASPER_PRINT, jasPrint);
            exporter.setParameter(JRExporterParameter.OUTPUT_STREAM, new FileOutputStream(reportName + ".pdf")); // your output goes here

            exporter.exportReport();
            JasperViewer.viewReport(jasPrint);

//          
             Notifications notificationBuilder = Notifications.create()
            .title("Report generation complete")
            .text("please wait")
            .hideAfter(Duration.seconds(3))
            .darkStyle()
            .position(Pos.CENTER)
            .onAction(new EventHandler<ActionEvent>() {
                @Override
                public void handle(ActionEvent event) {

                    JOptionPane.showMessageDialog(null,"cliced on notification");
                }
            });
    notificationBuilder.showConfirm();

            } catch (JRException ex) {
                JOptionPane.showMessageDialog(null,"No data found"+ex.getLocalizedMessage());
               // Logger.getLogger(FXMLDocumentController.class.getName()).log(Level.SEVERE, null, ex.getLocalizedMessage());

            } catch (FileNotFoundException ex) {
                 JOptionPane.showMessageDialog(null,ex);
               // Logger.getLogger(FXMLDocumentController.class.getName()).log(Level.SEVERE, null, ex.getLocalizedMessage());
            } 

        }
    }.start();
       
}
//=========================================gender report====================================

private void reportgender(){
          final String me = (String) selectgender.getSelectedItem();
       new Thread() {
        @Override
        public void run() {
    try {
       // maskerPane.setVisible(true);
         ImageIcon icon = new ImageIcon(getClass().getResource("/sms_project/images/10.gif"));
      JOptionPane.showMessageDialog(null, "Please wait while Processing Report\nClick OK to continue","",JOptionPane.INFORMATION_MESSAGE,icon);

        String reportName = "SDA";
        Connect cc= new Connect();
       conn=cc.connect();
        InputStream ur17 = getClass().getResourceAsStream("/sms_project/Reports/members.jrxml");
        JasperDesign dis = JRXmlLoader.load(ur17);

            //String sql = "SELECT Id,Name,regNumber,Phone_Number,Jumuiya,Year_Of_Study FROM church_members_records where Year_Of_Study =" + me + "";
           String sql="SELECT * FROM registermembers WHERE gender ='"+me+"'";
            JRDesignQuery newQuery = new JRDesignQuery();
            newQuery.setText(sql);
            dis.setQuery(newQuery);
            JasperReport rep = JasperCompileManager.compileReport(dis);

            JasperPrint jasPrint = JasperFillManager.fillReport(rep, null, conn);

            JRExporter exporter = new JRPdfExporter();

            exporter.setParameter(JRExporterParameter.JASPER_PRINT, jasPrint);
            exporter.setParameter(JRExporterParameter.OUTPUT_STREAM, new FileOutputStream(reportName + ".pdf")); // your output goes here

            exporter.exportReport();
            JasperViewer.viewReport(jasPrint);

//          
             Notifications notificationBuilder = Notifications.create()
            .title("Report generation complete")
            .text("please wait")
            .hideAfter(Duration.seconds(3))
            .darkStyle()
            .position(Pos.CENTER)
            .onAction(new EventHandler<ActionEvent>() {
                @Override
                public void handle(ActionEvent event) {

                    JOptionPane.showMessageDialog(null,"cliced on notification");
                }
            });
    notificationBuilder.showConfirm();

            } catch (JRException ex) {
                JOptionPane.showMessageDialog(null,"No data found"+ex.getLocalizedMessage());
               // Logger.getLogger(FXMLDocumentController.class.getName()).log(Level.SEVERE, null, ex.getLocalizedMessage());

            } catch (FileNotFoundException ex) {
                 JOptionPane.showMessageDialog(null,ex);
               // Logger.getLogger(FXMLDocumentController.class.getName()).log(Level.SEVERE, null, ex.getLocalizedMessage());
            } 

        }
    }.start();
}

//==================church groups generate lists===========================

private void reportGroups(){
          final String me = (String) selectGroup.getSelectedItem();
       new Thread() {
        @Override
        public void run() {
    try {
       // maskerPane.setVisible(true);
         ImageIcon icon = new ImageIcon(getClass().getResource("/sms_project/images/10.gif"));
      JOptionPane.showMessageDialog(null, "Please wait while Processing Report\nClick OK to continue","",JOptionPane.INFORMATION_MESSAGE,icon);

        String reportName = "SDA";
        Connect cc= new Connect();
       conn=cc.connect();
        InputStream ur17 = getClass().getResourceAsStream("/sms_project/Reports/groups.jrxml");
        JasperDesign dis = JRXmlLoader.load(ur17);

            //String sql = "SELECT Id,Name,regNumber,Phone_Number,Jumuiya,Year_Of_Study FROM church_members_records where Year_Of_Study =" + me + "";
           String sql="SELECT * FROM registermembers WHERE year ='"+me+"'";
            JRDesignQuery newQuery = new JRDesignQuery();
            newQuery.setText(sql);
            dis.setQuery(newQuery);
            JasperReport rep = JasperCompileManager.compileReport(dis);

            JasperPrint jasPrint = JasperFillManager.fillReport(rep, null, conn);

            JRExporter exporter = new JRPdfExporter();

            exporter.setParameter(JRExporterParameter.JASPER_PRINT, jasPrint);
            exporter.setParameter(JRExporterParameter.OUTPUT_STREAM, new FileOutputStream(reportName + ".pdf")); // your output goes here

            exporter.exportReport();
            JasperViewer.viewReport(jasPrint);

//          
             Notifications notificationBuilder = Notifications.create()
            .title("Report generation complete")
            .text("please wait")
            .hideAfter(Duration.seconds(3))
            .darkStyle()
            .position(Pos.CENTER)
            .onAction(new EventHandler<ActionEvent>() {
                @Override
                public void handle(ActionEvent event) {

                    JOptionPane.showMessageDialog(null,"cliced on notification");
                }
            });
    notificationBuilder.showConfirm();

            } catch (JRException ex) {
                JOptionPane.showMessageDialog(null,"No data found"+ex.getLocalizedMessage());
               // Logger.getLogger(FXMLDocumentController.class.getName()).log(Level.SEVERE, null, ex.getLocalizedMessage());

            } catch (FileNotFoundException ex) {
                 JOptionPane.showMessageDialog(null,ex);
               // Logger.getLogger(FXMLDocumentController.class.getName()).log(Level.SEVERE, null, ex.getLocalizedMessage());
            } 

        }
    }.start();
       
}

}